import asyncio
import sys
import os
import pytest
from unittest.mock import AsyncMock, ANY
from pytest_mock import MockerFixture

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from aiogram import Dispatcher, Bot
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import User, Chat, Message, Update

from handlers import setup_routers

# --- –§–∏–∫—Å—Ç—É—Ä—ã (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ, –Ω–æ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–∏–º –∑–¥–µ—Å—å) ---

@pytest.fixture(scope="function")
def storage():
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ FSM –≤ –ø–∞–º—è—Ç–∏."""
    return MemoryStorage()

@pytest.fixture
def bot() -> AsyncMock:
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–∫-–æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞."""
    bot_mock = AsyncMock(spec=Bot)
    bot_mock.send_message = AsyncMock()
    bot_mock.send_photo = AsyncMock()
    return bot_mock

@pytest.fixture(scope="function")
def dispatcher(storage):
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ —Å —Ä–æ—É—Ç–µ—Ä–∞–º–∏."""
    dp = Dispatcher(storage=storage)
    main_router, other_router, error_router = setup_routers()
    dp.include_router(main_router)
    dp.include_router(other_router)
    dp.include_router(error_router)
    return dp

@pytest.fixture
def user():
    """–§–∏–∫—Å—Ç—É—Ä–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –≤–æ–¥–∏—Ç–µ–ª—è)."""
    return User(id=123, is_bot=False, first_name="–¢–µ—Å—Ç–æ–≤—ã–π", username="testuser")

@pytest.fixture
def chat(user):
    """–§–∏–∫—Å—Ç—É—Ä–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
    return Chat(id=user.id, type="private", first_name=user.first_name, username=user.username)

async def send_message(dp: Dispatcher, bot: Bot, user: User, chat: Chat, text: str):
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    message = Message(message_id=1, date=asyncio.get_event_loop().time(), chat=chat, from_user=user, text=text)
    await dp.feed_update(bot, Update(update_id=1, message=message))

# --- –¢–µ—Å—Ç –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç ---

@pytest.mark.asyncio
async def test_non_driver_access_driver_cabinet(dispatcher: Dispatcher, bot: Bot, user: User, chat: Chat, mocker: MockerFixture):
    """
    –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ú–û–ñ–ï–¢ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–±–∏–Ω–µ—Ç—É –≤–æ–¥–∏—Ç–µ–ª—è
    –∏ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï "–ø—Ä–æ–≥–ª–∞—Ç—ã–≤–∞–µ—Ç—Å—è" —Å–∏—Å—Ç–µ–º–æ–π, –∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.
    """
    # –ú–æ–∫–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –≤ –ë–î, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ –±—ã–ª –≤–æ–¥–∏—Ç–µ–ª–µ–º
    mocker.patch('database.queries.is_driver', return_value=False)

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –≤–µ–¥–µ—Ç –≤ –∫–∞–±–∏–Ω–µ—Ç –≤–æ–¥–∏—Ç–µ–ª—è
    await send_message(dispatcher, bot, user, chat, "üöï –î–ª—è –≤–æ–¥—ñ—ó–≤")

    # –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ:
    # 1. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ `driver_cabinet.py` –ù–ï –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ —Ñ–∏–ª—å—Ç—Ä IsDriver –≤–µ—Ä–Ω–µ—Ç False.
    # 2. –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –¥–æ–π—Ç–∏ –¥–æ —Å–∞–º–æ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ `unhandled_message_handler` –≤ `error_handler.py`.
    # 3. –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å "–¢–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏ –Ω–µ–º–∞—î :("

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ù–ï –ë–´–õ–û –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª—è
    bot.send_photo.assert_not_called()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª –≤—ã–∑–≤–∞–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    bot.send_message.assert_called_once_with(
        chat.id,
        '–¢–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏ –Ω–µ–º–∞—î :(\n\n–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑, –∞–±–æ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –≤ /start.'
    )
